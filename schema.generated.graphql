type Aggregate {
  count: Int!
}

"""
Asset system model
"""
type Asset implements Node {
  """
  The time the document was created
  """
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Asset!]!
  featureImageNarrowProject(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `featureImageNarrowProject` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProjectOrderByInput
    skip: Int
    where: ProjectWhereInput
  ): [Project!]!
  featureMediaWideProject(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `featureMediaWideProject` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProjectOrderByInput
    skip: Int
    where: ProjectWhereInput
  ): [Project!]!

  """
  The file name
  """
  fileName: String!

  """
  The file handle
  """
  handle: String!

  """
  The height of the file
  """
  height: Float

  """
  List of Asset versions
  """
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!

  """
  System Locale field
  """
  locale: Locale!

  """
  Get the other localizations for this document
  """
  localizations(
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [en]
  ): [Asset!]!
  mediaProject(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `mediaProject` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProjectOrderByInput
    skip: Int
    where: ProjectWhereInput
  ): [Project!]!
  mediaType: MediaType

  """
  The mime type of the file
  """
  mimeType: String

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  The file size
  """
  size: Float

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the url for the asset with provided transformations applied.
  """
  url(transformation: AssetTransformationInput): String!

  """
  The file width
  """
  width: Float
}

input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: AssetWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type AssetConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [AssetEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input AssetCreateInput {
  createdAt: DateTime
  featureImageNarrowProject: ProjectCreateManyInlineInput
  featureMediaWideProject: ProjectCreateManyInlineInput
  fileName: String!
  handle: String!
  height: Float
  imageSeo: SeoCreateManyInlineInput

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
  mediaProject: ProjectCreateManyInlineInput
  mediaType: MediaType
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  fileName: String!
  handle: String!
  height: Float
  mimeType: String
  size: Float
  updatedAt: DateTime
  width: Float
}

input AssetCreateLocalizationInput {
  """
  Localization input
  """
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetWhereUniqueInput!]

  """
  Create and connect multiple existing Asset documents
  """
  create: [AssetCreateInput!]
}

input AssetCreateOneInlineInput {
  """
  Connect one existing Asset document
  """
  connect: AssetWhereUniqueInput

  """
  Create and connect one Asset document
  """
  create: AssetCreateInput
}

"""
An edge in a connection.
"""
type AssetEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Asset!
}

"""
Identifies documents
"""
input AssetManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  featureImageNarrowProject_every: ProjectWhereInput
  featureImageNarrowProject_none: ProjectWhereInput
  featureImageNarrowProject_some: ProjectWhereInput
  featureMediaWideProject_every: ProjectWhereInput
  featureMediaWideProject_none: ProjectWhereInput
  featureMediaWideProject_some: ProjectWhereInput
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  mediaProject_every: ProjectWhereInput
  mediaProject_none: ProjectWhereInput
  mediaProject_some: ProjectWhereInput
  mediaType: MediaType

  """
  All values that are contained in given list.
  """
  mediaType_in: [MediaType]

  """
  All values that are not equal to given value.
  """
  mediaType_not: MediaType

  """
  All values that are not contained in given list.
  """
  mediaType_not_in: [MediaType]
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum AssetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  fileName_ASC
  fileName_DESC
  handle_ASC
  handle_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  mediaType_ASC
  mediaType_DESC
  mimeType_ASC
  mimeType_DESC
  publishedAt_ASC
  publishedAt_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

"""
Transformations for Assets
"""
input AssetTransformationInput {
  document: DocumentTransformationInput
  image: ImageTransformationInput

  """
  Pass true if you want to validate the passed transformation parameters
  """
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  featureImageNarrowProject: ProjectUpdateManyInlineInput
  featureMediaWideProject: ProjectUpdateManyInlineInput
  fileName: String
  handle: String
  height: Float
  imageSeo: SeoUpdateManyInlineInput

  """
  Manage document localizations
  """
  localizations: AssetUpdateLocalizationsInput
  mediaProject: ProjectUpdateManyInlineInput
  mediaType: MediaType
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationDataInput {
  fileName: String
  handle: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [AssetCreateLocalizationInput!]

  """
  Localizations to delete
  """
  delete: [Locale!]

  """
  Localizations to update
  """
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
}

input AssetUpdateManyInlineInput {
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetConnectInput!]

  """
  Create and connect multiple Asset documents
  """
  create: [AssetCreateInput!]

  """
  Delete multiple Asset documents
  """
  delete: [AssetWhereUniqueInput!]

  """
  Disconnect multiple Asset documents
  """
  disconnect: [AssetWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """
  Update multiple Asset documents
  """
  update: [AssetUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Asset documents
  """
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float

  """
  Optional updates to localizations
  """
  localizations: AssetUpdateManyLocalizationsInput
  mediaType: MediaType
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  mimeType: String
  size: Float
  width: Float
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """
  Localizations to update
  """
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: AssetUpdateManyInput!

  """
  Document search
  """
  where: AssetWhereInput!
}

input AssetUpdateOneInlineInput {
  """
  Connect existing Asset document
  """
  connect: AssetWhereUniqueInput

  """
  Create and connect one Asset document
  """
  create: AssetCreateInput

  """
  Delete currently connected Asset document
  """
  delete: Boolean

  """
  Disconnect currently connected Asset document
  """
  disconnect: Boolean

  """
  Update single Asset document
  """
  update: AssetUpdateWithNestedWhereUniqueInput

  """
  Upsert single Asset document
  """
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

input AssetUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: AssetUpdateInput!

  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
}

input AssetUpsertInput {
  """
  Create document if it didn't exist
  """
  create: AssetCreateInput!

  """
  Update document if it exists
  """
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
  update: AssetUpdateLocalizationDataInput!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: AssetUpsertInput!

  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input AssetWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""
Identifies documents
"""
input AssetWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: AssetWhereStageInput
  documentInStages_none: AssetWhereStageInput
  documentInStages_some: AssetWhereStageInput
  featureImageNarrowProject_every: ProjectWhereInput
  featureImageNarrowProject_none: ProjectWhereInput
  featureImageNarrowProject_some: ProjectWhereInput
  featureMediaWideProject_every: ProjectWhereInput
  featureMediaWideProject_none: ProjectWhereInput
  featureMediaWideProject_some: ProjectWhereInput
  fileName: String

  """
  All values containing the given string.
  """
  fileName_contains: String

  """
  All values ending with the given string.
  """
  fileName_ends_with: String

  """
  All values that are contained in given list.
  """
  fileName_in: [String]

  """
  All values that are not equal to given value.
  """
  fileName_not: String

  """
  All values not containing the given string.
  """
  fileName_not_contains: String

  """
  All values not ending with the given string
  """
  fileName_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  fileName_not_in: [String]

  """
  All values not starting with the given string.
  """
  fileName_not_starts_with: String

  """
  All values starting with the given string.
  """
  fileName_starts_with: String
  handle: String

  """
  All values containing the given string.
  """
  handle_contains: String

  """
  All values ending with the given string.
  """
  handle_ends_with: String

  """
  All values that are contained in given list.
  """
  handle_in: [String]

  """
  All values that are not equal to given value.
  """
  handle_not: String

  """
  All values not containing the given string.
  """
  handle_not_contains: String

  """
  All values not ending with the given string
  """
  handle_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  handle_not_in: [String]

  """
  All values not starting with the given string.
  """
  handle_not_starts_with: String

  """
  All values starting with the given string.
  """
  handle_starts_with: String
  height: Float

  """
  All values greater than the given value.
  """
  height_gt: Float

  """
  All values greater than or equal the given value.
  """
  height_gte: Float

  """
  All values that are contained in given list.
  """
  height_in: [Float]

  """
  All values less than the given value.
  """
  height_lt: Float

  """
  All values less than or equal the given value.
  """
  height_lte: Float

  """
  All values that are not equal to given value.
  """
  height_not: Float

  """
  All values that are not contained in given list.
  """
  height_not_in: [Float]
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  mediaProject_every: ProjectWhereInput
  mediaProject_none: ProjectWhereInput
  mediaProject_some: ProjectWhereInput
  mediaType: MediaType

  """
  All values that are contained in given list.
  """
  mediaType_in: [MediaType]

  """
  All values that are not equal to given value.
  """
  mediaType_not: MediaType

  """
  All values that are not contained in given list.
  """
  mediaType_not_in: [MediaType]
  mimeType: String

  """
  All values containing the given string.
  """
  mimeType_contains: String

  """
  All values ending with the given string.
  """
  mimeType_ends_with: String

  """
  All values that are contained in given list.
  """
  mimeType_in: [String]

  """
  All values that are not equal to given value.
  """
  mimeType_not: String

  """
  All values not containing the given string.
  """
  mimeType_not_contains: String

  """
  All values not ending with the given string
  """
  mimeType_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  mimeType_not_in: [String]

  """
  All values not starting with the given string.
  """
  mimeType_not_starts_with: String

  """
  All values starting with the given string.
  """
  mimeType_starts_with: String
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  size: Float

  """
  All values greater than the given value.
  """
  size_gt: Float

  """
  All values greater than or equal the given value.
  """
  size_gte: Float

  """
  All values that are contained in given list.
  """
  size_in: [Float]

  """
  All values less than the given value.
  """
  size_lt: Float

  """
  All values less than or equal the given value.
  """
  size_lte: Float

  """
  All values that are not equal to given value.
  """
  size_not: Float

  """
  All values that are not contained in given list.
  """
  size_not_in: [Float]
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
  width: Float

  """
  All values greater than the given value.
  """
  width_gt: Float

  """
  All values greater than or equal the given value.
  """
  width_gte: Float

  """
  All values that are contained in given list.
  """
  width_in: [Float]

  """
  All values less than the given value.
  """
  width_lt: Float

  """
  All values less than or equal the given value.
  """
  width_lte: Float

  """
  All values that are not equal to given value.
  """
  width_not: Float

  """
  All values that are not contained in given list.
  """
  width_not_in: [Float]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input AssetWhereStageInput {
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereStageInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereStageInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: AssetWhereComparatorInput

  """
  Specify the stage to compare with
  """
  stage: Stage
}

"""
References Asset record uniquely
"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

type Client implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Client!]!

  """
  List of Client versions
  """
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!
  name: String!
  projects(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `projects` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ProjectOrderByInput
    skip: Int
    where: ProjectWhereInput
  ): [Project!]!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ClientConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ClientWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ClientConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ClientEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input ClientCreateInput {
  createdAt: DateTime
  name: String!
  projects: ProjectCreateManyInlineInput
  updatedAt: DateTime
}

input ClientCreateManyInlineInput {
  """
  Connect multiple existing Client documents
  """
  connect: [ClientWhereUniqueInput!]

  """
  Create and connect multiple existing Client documents
  """
  create: [ClientCreateInput!]
}

input ClientCreateOneInlineInput {
  """
  Connect one existing Client document
  """
  connect: ClientWhereUniqueInput

  """
  Create and connect one Client document
  """
  create: ClientCreateInput
}

"""
An edge in a connection.
"""
type ClientEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Client!
}

"""
Identifies documents
"""
input ClientManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ClientWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ClientWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ClientWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ClientWhereStageInput
  documentInStages_none: ClientWhereStageInput
  documentInStages_some: ClientWhereStageInput
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  projects_every: ProjectWhereInput
  projects_none: ProjectWhereInput
  projects_some: ProjectWhereInput
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ClientOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ClientUpdateInput {
  name: String
  projects: ProjectUpdateManyInlineInput
}

input ClientUpdateManyInlineInput {
  """
  Connect multiple existing Client documents
  """
  connect: [ClientConnectInput!]

  """
  Create and connect multiple Client documents
  """
  create: [ClientCreateInput!]

  """
  Delete multiple Client documents
  """
  delete: [ClientWhereUniqueInput!]

  """
  Disconnect multiple Client documents
  """
  disconnect: [ClientWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Client documents
  """
  set: [ClientWhereUniqueInput!]

  """
  Update multiple Client documents
  """
  update: [ClientUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Client documents
  """
  upsert: [ClientUpsertWithNestedWhereUniqueInput!]
}

input ClientUpdateManyInput {
  """
  No fields in updateMany data input
  """
  _: String
}

input ClientUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: ClientUpdateManyInput!

  """
  Document search
  """
  where: ClientWhereInput!
}

input ClientUpdateOneInlineInput {
  """
  Connect existing Client document
  """
  connect: ClientWhereUniqueInput

  """
  Create and connect one Client document
  """
  create: ClientCreateInput

  """
  Delete currently connected Client document
  """
  delete: Boolean

  """
  Disconnect currently connected Client document
  """
  disconnect: Boolean

  """
  Update single Client document
  """
  update: ClientUpdateWithNestedWhereUniqueInput

  """
  Upsert single Client document
  """
  upsert: ClientUpsertWithNestedWhereUniqueInput
}

input ClientUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: ClientUpdateInput!

  """
  Unique document search
  """
  where: ClientWhereUniqueInput!
}

input ClientUpsertInput {
  """
  Create document if it didn't exist
  """
  create: ClientCreateInput!

  """
  Update document if it exists
  """
  update: ClientUpdateInput!
}

input ClientUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: ClientUpsertInput!

  """
  Unique document search
  """
  where: ClientWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ClientWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""
Identifies documents
"""
input ClientWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ClientWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ClientWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ClientWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  documentInStages_every: ClientWhereStageInput
  documentInStages_none: ClientWhereStageInput
  documentInStages_some: ClientWhereStageInput
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  projects_every: ProjectWhereInput
  projects_none: ProjectWhereInput
  projects_some: ProjectWhereInput
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ClientWhereStageInput {
  """
  Logical AND on all given filters.
  """
  AND: [ClientWhereStageInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ClientWhereStageInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ClientWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ClientWhereComparatorInput

  """
  Specify the stage to compare with
  """
  stage: Stage
}

"""
References Client record uniquely
"""
input ClientWhereUniqueInput {
  id: ID
  name: String
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  css: String!
  hex: Hex!
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """
  Connect document after specified document
  """
  after: ID

  """
  Connect document before specified document
  """
  before: ID

  """
  Connect document at last position
  """
  end: Boolean

  """
  Connect document at first position
  """
  start: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  doc
  docx
  html
  jpg
  odp
  ods
  odt
  pdf
  png
  ppt
  pptx
  svg
  txt
  webp
  xls
  xlsx
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:

  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""
Transformations for Documents
"""
input DocumentTransformationInput {
  """
  Changes the output for the file.
  """
  output: DocumentOutputInput
}

type DocumentVersion {
  createdAt: DateTime!
  data: Json
  id: ID!
  revision: Int!
  stage: Stage!
}

scalar Hex

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max

  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

input ImageResizeInput {
  """
  The default value for the fit parameter is fit:clip.
  """
  fit: ImageFit

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""
Transformations for Images
"""
input ImageTransformationInput {
  """
  Resizes the image
  """
  resize: ImageResizeInput
}

"""
Raw JSON value
"""
scalar Json

"""
Locale system enumeration
"""
enum Locale {
  """
  System locale
  """
  en
}

"""
Representing a geolocation point with latitude and longitude
"""
type Location {
  distance(from: LocationInput!): Float!
  latitude: Float!
  longitude: Float!
}

"""
Input for a geolocation point with latitude and longitude
"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MediaType {
  IMAGE
  VIDEO
}

type Mutation {
  """
  Create one asset
  """
  createAsset(data: AssetCreateInput!): Asset
    @deprecated(reason: "Asset mutations will be overhauled soon")

  """
  Create one client
  """
  createClient(data: ClientCreateInput!): Client

  """
  Create one project
  """
  createProject(data: ProjectCreateInput!): Project

  """
  Create one scheduledRelease
  """
  createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease

  """
  Delete one asset from _all_ existing stages. Returns deleted document.
  """
  deleteAsset(
    """
    Document to delete
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Delete one client from _all_ existing stages. Returns deleted document.
  """
  deleteClient(
    """
    Document to delete
    """
    where: ClientWhereUniqueInput!
  ): Client

  """
  Delete many Asset documents
  """
  deleteManyAssets(
    """
    Documents to delete
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)"
    )

  """
  Delete many Asset documents, return deleted documents
  """
  deleteManyAssetsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """
    Documents to delete
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Delete many Client documents
  """
  deleteManyClients(
    """
    Documents to delete
    """
    where: ClientManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyClientsConnection)"
    )

  """
  Delete many Client documents, return deleted documents
  """
  deleteManyClientsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """
    Documents to delete
    """
    where: ClientManyWhereInput
  ): ClientConnection!

  """
  Delete many Project documents
  """
  deleteManyProjects(
    """
    Documents to delete
    """
    where: ProjectManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (deleteManyProjectsConnection)"
    )

  """
  Delete many Project documents, return deleted documents
  """
  deleteManyProjectsConnection(
    after: ID
    before: ID
    first: Int
    last: Int
    skip: Int

    """
    Documents to delete
    """
    where: ProjectManyWhereInput
  ): ProjectConnection!

  """
  Delete one project from _all_ existing stages. Returns deleted document.
  """
  deleteProject(
    """
    Document to delete
    """
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Delete and return scheduled operation
  """
  deleteScheduledOperation(
    """
    Document to delete
    """
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """
    Document to delete
    """
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Publish one asset
  """
  publishAsset(
    """
    Optional localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AssetWhereUniqueInput!

    """
    Whether to include the default locale when publishBase is set
    """
    withDefaultLocale: Boolean = true
  ): Asset

  """
  Publish one client
  """
  publishClient(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: ClientWhereUniqueInput!
  ): Client

  """
  Publish many Asset documents
  """
  publishManyAssets(
    """
    Document localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AssetManyWhereInput

    """
    Whether to include the default locale when publishBase is true
    """
    withDefaultLocale: Boolean = true
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyAssetsConnection)"
    )

  """
  Publish many Asset documents
  """
  publishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT
    last: Int

    """
    Document localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: AssetManyWhereInput

    """
    Whether to include the default locale when publishBase is true
    """
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """
  Publish many Client documents
  """
  publishManyClients(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: ClientManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyClientsConnection)"
    )

  """
  Publish many Client documents
  """
  publishManyClientsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT
    last: Int
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: ClientManyWhereInput
  ): ClientConnection!

  """
  Publish many Project documents
  """
  publishManyProjects(
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: ProjectManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (publishManyProjectsConnection)"
    )

  """
  Publish many Project documents
  """
  publishManyProjectsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stage to find matching documents in
    """
    from: Stage = DRAFT
    last: Int
    skip: Int

    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage to be published
    """
    where: ProjectManyWhereInput
  ): ProjectConnection!

  """
  Publish one project
  """
  publishProject(
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Schedule to publish one asset
  """
  schedulePublishAsset(
    """
    Optional localizations to publish
    """
    locales: [Locale!]

    """
    Whether to publish the base document
    """
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: AssetWhereUniqueInput!

    """
    Whether to include the default locale when publishBase is set
    """
    withDefaultLocale: Boolean = true
  ): Asset

  """
  Schedule to publish one client
  """
  schedulePublishClient(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: ClientWhereUniqueInput!
  ): Client

  """
  Schedule to publish one project
  """
  schedulePublishProject(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]

    """
    Document to publish
    """
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """
    Document to unpublish
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one client from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishClient(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: ClientWhereUniqueInput!
  ): Client

  """
  Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishProject(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """
    Optionally attach this scheduled operation to an existing release
    """
    releaseId: String

    """
    Document to unpublish
    """
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """
    Document to unpublish
    """
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one client from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishClient(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: ClientWhereUniqueInput!
  ): Client

  """
  Unpublish many Asset documents
  """
  unpublishManyAssets(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Locales to unpublish
    """
    locales: [Locale!]

    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true

    """
    Identifies documents in each stage
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)"
    )

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    last: Int

    """
    Locales to unpublish
    """
    locales: [Locale!]
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true

    """
    Identifies documents in draft stage
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Unpublish many Client documents
  """
  unpublishManyClients(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: ClientManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyClientsConnection)"
    )

  """
  Find many Client documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyClientsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: ClientManyWhereInput
  ): ClientConnection!

  """
  Unpublish many Project documents
  """
  unpublishManyProjects(
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Identifies documents in each stage
    """
    where: ProjectManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (unpublishManyProjectsConnection)"
    )

  """
  Find many Project documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyProjectsConnection(
    after: ID
    before: ID
    first: Int

    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    last: Int
    skip: Int

    """
    Stage to find matching documents in
    """
    stage: Stage = DRAFT

    """
    Identifies documents in draft stage
    """
    where: ProjectManyWhereInput
  ): ProjectConnection!

  """
  Unpublish one project from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishProject(
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]

    """
    Document to unpublish
    """
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Update one asset
  """
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset

  """
  Update one client
  """
  updateClient(data: ClientUpdateInput!, where: ClientWhereUniqueInput!): Client

  """
  Update many assets
  """
  updateManyAssets(
    """
    Updates to document content
    """
    data: AssetUpdateManyInput!

    """
    Documents to apply update on
    """
    where: AssetManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyAssetsConnection)"
    )

  """
  Update many Asset documents
  """
  updateManyAssetsConnection(
    after: ID
    before: ID

    """
    Updates to document content
    """
    data: AssetUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """
    Documents to apply update on
    """
    where: AssetManyWhereInput
  ): AssetConnection!

  """
  Update many clients
  """
  updateManyClients(
    """
    Updates to document content
    """
    data: ClientUpdateManyInput!

    """
    Documents to apply update on
    """
    where: ClientManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyClientsConnection)"
    )

  """
  Update many Client documents
  """
  updateManyClientsConnection(
    after: ID
    before: ID

    """
    Updates to document content
    """
    data: ClientUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """
    Documents to apply update on
    """
    where: ClientManyWhereInput
  ): ClientConnection!

  """
  Update many projects
  """
  updateManyProjects(
    """
    Updates to document content
    """
    data: ProjectUpdateManyInput!

    """
    Documents to apply update on
    """
    where: ProjectManyWhereInput
  ): BatchPayload!
    @deprecated(
      reason: "Please use the new paginated many mutation (updateManyProjectsConnection)"
    )

  """
  Update many Project documents
  """
  updateManyProjectsConnection(
    after: ID
    before: ID

    """
    Updates to document content
    """
    data: ProjectUpdateManyInput!
    first: Int
    last: Int
    skip: Int

    """
    Documents to apply update on
    """
    where: ProjectManyWhereInput
  ): ProjectConnection!

  """
  Update one project
  """
  updateProject(
    data: ProjectUpdateInput!
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Update one scheduledRelease
  """
  updateScheduledRelease(
    data: ScheduledReleaseUpdateInput!
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Upsert one asset
  """
  upsertAsset(upsert: AssetUpsertInput!, where: AssetWhereUniqueInput!): Asset

  """
  Upsert one client
  """
  upsertClient(
    upsert: ClientUpsertInput!
    where: ClientWhereUniqueInput!
  ): Client

  """
  Upsert one project
  """
  upsertProject(
    upsert: ProjectUpsertInput!
    where: ProjectWhereUniqueInput!
  ): Project
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!

  """
  The Stage of an object
  """
  stage: Stage!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  Number of items in the current page.
  """
  pageSize: Int

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Project implements Node {
  category: [String!]!
  client(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `client` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Client
  contribution: [String!]!

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  date: [Date!]!
  description: RichText!
  descriptionLong: RichText!

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Project!]!
  featureMediaNarrow(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `featureMediaNarrow` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  featureMediaWide(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `featureMediaWide` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  featured: Boolean!

  """
  List of Project versions
  """
  history(
    limit: Int! = 10
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """
  The unique identifier
  """
  id: ID!
  link: String
  media(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `media` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: AssetOrderByInput
    skip: Int
    where: AssetWhereInput
  ): [Asset!]!
  name: String!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!
  seo(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `seo` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Seo!
  slug: String!

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ProjectConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ProjectWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ProjectConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ProjectEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input ProjectCreateInput {
  category: [String!]!
  client: ClientCreateOneInlineInput
  contribution: [String!]
  createdAt: DateTime
  date: [Date!]!
  description: RichTextAST!
  descriptionLong: RichTextAST!
  featureMediaNarrow: AssetCreateOneInlineInput!
  featureMediaWide: AssetCreateOneInlineInput!
  featured: Boolean!
  link: String
  media: AssetCreateManyInlineInput!
  name: String!
  seo: SeoCreateOneInlineInput!
  slug: String!
  updatedAt: DateTime
}

input ProjectCreateManyInlineInput {
  """
  Connect multiple existing Project documents
  """
  connect: [ProjectWhereUniqueInput!]

  """
  Create and connect multiple existing Project documents
  """
  create: [ProjectCreateInput!]
}

input ProjectCreateOneInlineInput {
  """
  Connect one existing Project document
  """
  connect: ProjectWhereUniqueInput

  """
  Create and connect one Project document
  """
  create: ProjectCreateInput
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Project!
}

"""
Identifies documents
"""
input ProjectManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProjectWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ProjectWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ProjectWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  category: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  category_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  category_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  category_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  category_not: [String!]
  client: ClientWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  contribution: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  contribution_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  contribution_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  contribution_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  contribution_not: [String!]
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  date: [Date!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  date_contains_all: [Date!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  date_contains_none: [Date!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  date_contains_some: [Date!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  date_not: [Date!]
  documentInStages_every: ProjectWhereStageInput
  documentInStages_none: ProjectWhereStageInput
  documentInStages_some: ProjectWhereStageInput
  featureMediaNarrow: AssetWhereInput
  featureMediaWide: AssetWhereInput
  featured: Boolean

  """
  All values that are not equal to given value.
  """
  featured_not: Boolean
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  link: String

  """
  All values containing the given string.
  """
  link_contains: String

  """
  All values ending with the given string.
  """
  link_ends_with: String

  """
  All values that are contained in given list.
  """
  link_in: [String]

  """
  All values that are not equal to given value.
  """
  link_not: String

  """
  All values not containing the given string.
  """
  link_not_contains: String

  """
  All values not ending with the given string
  """
  link_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  link_not_in: [String]

  """
  All values not starting with the given string.
  """
  link_not_starts_with: String

  """
  All values starting with the given string.
  """
  link_starts_with: String
  media_every: AssetWhereInput
  media_none: AssetWhereInput
  media_some: AssetWhereInput
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  seo: SeoWhereInput
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ProjectOrderByInput {
  category_ASC
  category_DESC
  contribution_ASC
  contribution_DESC
  createdAt_ASC
  createdAt_DESC
  date_ASC
  date_DESC
  featured_ASC
  featured_DESC
  id_ASC
  id_DESC
  link_ASC
  link_DESC
  name_ASC
  name_DESC
  publishedAt_ASC
  publishedAt_DESC
  slug_ASC
  slug_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProjectUpdateInput {
  category: [String!]
  client: ClientUpdateOneInlineInput
  contribution: [String!]
  date: [Date!]
  description: RichTextAST
  descriptionLong: RichTextAST
  featureMediaNarrow: AssetUpdateOneInlineInput
  featureMediaWide: AssetUpdateOneInlineInput
  featured: Boolean
  link: String
  media: AssetUpdateManyInlineInput
  name: String
  seo: SeoUpdateOneInlineInput
  slug: String
}

input ProjectUpdateManyInlineInput {
  """
  Connect multiple existing Project documents
  """
  connect: [ProjectConnectInput!]

  """
  Create and connect multiple Project documents
  """
  create: [ProjectCreateInput!]

  """
  Delete multiple Project documents
  """
  delete: [ProjectWhereUniqueInput!]

  """
  Disconnect multiple Project documents
  """
  disconnect: [ProjectWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Project documents
  """
  set: [ProjectWhereUniqueInput!]

  """
  Update multiple Project documents
  """
  update: [ProjectUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple Project documents
  """
  upsert: [ProjectUpsertWithNestedWhereUniqueInput!]
}

input ProjectUpdateManyInput {
  category: [String!]
  contribution: [String!]
  date: [Date!]
  description: RichTextAST
  descriptionLong: RichTextAST
  featured: Boolean
  name: String
}

input ProjectUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: ProjectUpdateManyInput!

  """
  Document search
  """
  where: ProjectWhereInput!
}

input ProjectUpdateOneInlineInput {
  """
  Connect existing Project document
  """
  connect: ProjectWhereUniqueInput

  """
  Create and connect one Project document
  """
  create: ProjectCreateInput

  """
  Delete currently connected Project document
  """
  delete: Boolean

  """
  Disconnect currently connected Project document
  """
  disconnect: Boolean

  """
  Update single Project document
  """
  update: ProjectUpdateWithNestedWhereUniqueInput

  """
  Upsert single Project document
  """
  upsert: ProjectUpsertWithNestedWhereUniqueInput
}

input ProjectUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: ProjectUpdateInput!

  """
  Unique document search
  """
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertInput {
  """
  Create document if it didn't exist
  """
  create: ProjectCreateInput!

  """
  Update document if it exists
  """
  update: ProjectUpdateInput!
}

input ProjectUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: ProjectUpsertInput!

  """
  Unique document search
  """
  where: ProjectWhereUniqueInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ProjectWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""
Identifies documents
"""
input ProjectWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProjectWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ProjectWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ProjectWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  category: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  category_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  category_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  category_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  category_not: [String!]
  client: ClientWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  contribution: [String!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  contribution_contains_all: [String!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  contribution_contains_none: [String!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  contribution_contains_some: [String!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  contribution_not: [String!]
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput

  """
  Matches if the field array contains *all* items provided to the filter and order does match
  """
  date: [Date!]

  """
  Matches if the field array contains *all* items provided to the filter
  """
  date_contains_all: [Date!]

  """
  Matches if the field array does not contain any of the items provided to the filter
  """
  date_contains_none: [Date!]

  """
  Matches if the field array contains at least one item provided to the filter
  """
  date_contains_some: [Date!]

  """
  Matches if the field array does not contains *all* items provided to the filter or order does not match
  """
  date_not: [Date!]
  documentInStages_every: ProjectWhereStageInput
  documentInStages_none: ProjectWhereStageInput
  documentInStages_some: ProjectWhereStageInput
  featureMediaNarrow: AssetWhereInput
  featureMediaWide: AssetWhereInput
  featured: Boolean

  """
  All values that are not equal to given value.
  """
  featured_not: Boolean
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  link: String

  """
  All values containing the given string.
  """
  link_contains: String

  """
  All values ending with the given string.
  """
  link_ends_with: String

  """
  All values that are contained in given list.
  """
  link_in: [String]

  """
  All values that are not equal to given value.
  """
  link_not: String

  """
  All values not containing the given string.
  """
  link_not_contains: String

  """
  All values not ending with the given string
  """
  link_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  link_not_in: [String]

  """
  All values not starting with the given string.
  """
  link_not_starts_with: String

  """
  All values starting with the given string.
  """
  link_starts_with: String
  media_every: AssetWhereInput
  media_none: AssetWhereInput
  media_some: AssetWhereInput
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  seo: SeoWhereInput
  slug: String

  """
  All values containing the given string.
  """
  slug_contains: String

  """
  All values ending with the given string.
  """
  slug_ends_with: String

  """
  All values that are contained in given list.
  """
  slug_in: [String]

  """
  All values that are not equal to given value.
  """
  slug_not: String

  """
  All values not containing the given string.
  """
  slug_not_contains: String

  """
  All values not ending with the given string
  """
  slug_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  slug_not_in: [String]

  """
  All values not starting with the given string.
  """
  slug_not_starts_with: String

  """
  All values starting with the given string.
  """
  slug_starts_with: String
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ProjectWhereStageInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProjectWhereStageInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ProjectWhereStageInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ProjectWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: ProjectWhereComparatorInput

  """
  Specify the stage to compare with
  """
  stage: Stage
}

"""
References Project record uniquely
"""
input ProjectWhereUniqueInput {
  id: ID
  link: String
  slug: String
}

input PublishLocaleInput {
  """
  Locales to publish
  """
  locale: Locale!

  """
  Stages to publish selected locales to
  """
  stages: [Stage!]!
}

type Query {
  """
  Retrieve a single asset
  """
  asset(
    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Retrieve document version
  """
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple assets
  """
  assets(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): [Asset!]!

  """
  Retrieve multiple assets using the Relay connection interface
  """
  assetsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: AssetOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: AssetWhereInput
  ): AssetConnection!

  """
  Retrieve a single client
  """
  client(
    """
    Defines which locales should be returned.

    Note that `Client` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ClientWhereUniqueInput!
  ): Client

  """
  Retrieve document version
  """
  clientVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple clients
  """
  clients(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Client` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ClientOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ClientWhereInput
  ): [Client!]!

  """
  Retrieve multiple clients using the Relay connection interface
  """
  clientsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Client` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ClientOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ClientWhereInput
  ): ClientConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!

    """
    Defines which locales should be returned.

    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
  ): Node

  """
  Retrieve a single project
  """
  project(
    """
    Defines which locales should be returned.

    Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ProjectWhereUniqueInput!
  ): Project

  """
  Retrieve document version
  """
  projectVersion(where: VersionWhereInput!): DocumentVersion

  """
  Retrieve multiple projects
  """
  projects(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProjectOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProjectWhereInput
  ): [Project!]!

  """
  Retrieve multiple projects using the Relay connection interface
  """
  projectsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `Project` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ProjectOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ProjectWhereInput
  ): ProjectConnection!

  """
  Retrieve a single scheduledOperation
  """
  scheduledOperation(
    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Retrieve multiple scheduledOperations
  """
  scheduledOperations(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!

  """
  Retrieve a single scheduledRelease
  """
  scheduledRelease(
    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """
  Retrieve multiple scheduledReleases
  """
  scheduledReleases(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!

  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!

  """
  Retrieve a single user
  """
  user(
    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    stage: Stage! = PUBLISHED
    where: UserWhereUniqueInput!
  ): User

  """
  Retrieve multiple users
  """
  users(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): [User!]!

  """
  Retrieve multiple users using the Relay connection interface
  """
  usersConnection(
    after: String
    before: String
    first: Int
    last: Int

    """
    Defines which locales should be returned.

    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
    orderBy: UserOrderByInput
    skip: Int
    stage: Stage! = PUBLISHED
    where: UserWhereInput
  ): UserConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  a: RGBATransparency!
  b: RGBAHue!
  g: RGBAHue!
  r: RGBAHue!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """
  Returns HTMl representation
  """
  html: String!

  """
  Returns Markdown representation
  """
  markdown: String!

  """
  Returns AST representation
  """
  raw: RichTextAST!

  """
  Returns plain-text contents of RichText
  """
  text: String!
}

"""
Slate-compatible RichText AST
"""
scalar RichTextAST

"""
Scheduled Operation system model
"""
type ScheduledOperation implements Node {
  affectedDocuments(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!

  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Operation description
  """
  description: String

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledOperation!]!

  """
  Operation error message
  """
  errorMessage: String

  """
  The unique identifier
  """
  id: ID!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!

  """
  The release this operation is scheduled for
  """
  release(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease

  """
  System stage field
  """
  stage: Stage!

  """
  operation Status
  """
  status: ScheduledOperationStatus!

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

union ScheduledOperationAffectedDocument = Asset | Client | Project

input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ScheduledOperationWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ScheduledOperationConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ScheduledOperationEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input ScheduledOperationCreateManyInlineInput {
  """
  Connect multiple existing ScheduledOperation documents
  """
  connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
  """
  Connect one existing ScheduledOperation document
  """
  connect: ScheduledOperationWhereUniqueInput
}

"""
An edge in a connection.
"""
type ScheduledOperationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ScheduledOperation!
}

"""
Identifies documents
"""
input ScheduledOperationManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledOperationWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledOperationWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledOperationWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledOperationStatus]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledOperationStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledOperationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  publishedAt_ASC
  publishedAt_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
System Scheduled Operation Status
"""
enum ScheduledOperationStatus {
  CANCELED
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledOperationUpdateManyInlineInput {
  """
  Connect multiple existing ScheduledOperation documents
  """
  connect: [ScheduledOperationConnectInput!]

  """
  Disconnect multiple ScheduledOperation documents
  """
  disconnect: [ScheduledOperationWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
  """
  Connect existing ScheduledOperation document
  """
  connect: ScheduledOperationWhereUniqueInput

  """
  Disconnect currently connected ScheduledOperation document
  """
  disconnect: Boolean
}

"""
Identifies documents
"""
input ScheduledOperationWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledOperationWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledOperationWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledOperationWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledOperationStatus]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledOperationStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledOperationStatus]
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
References ScheduledOperation record uniquely
"""
input ScheduledOperationWhereUniqueInput {
  id: ID
}

"""
Scheduled Release system model
"""
type ScheduledRelease implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  User that created this document
  """
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Release description
  """
  description: String

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledRelease!]!

  """
  Release error message
  """
  errorMessage: String

  """
  The unique identifier
  """
  id: ID!

  """
  Whether scheduled release should be run
  """
  isActive: Boolean!

  """
  Whether scheduled release is implicit
  """
  isImplicit: Boolean!

  """
  Operations to run with this release
  """
  operations(
    after: String
    before: String
    first: Int
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  User that last published this document
  """
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Release date and time
  """
  releaseAt: DateTime

  """
  System stage field
  """
  stage: Stage!

  """
  Release Status
  """
  status: ScheduledReleaseStatus!

  """
  Release Title
  """
  title: String

  """
  The time the document was updated
  """
  updatedAt: DateTime!

  """
  User that last updated this document
  """
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: ScheduledReleaseWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type ScheduledReleaseConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [ScheduledReleaseEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input ScheduledReleaseCreateInput {
  createdAt: DateTime
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
  title: String
  updatedAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
  """
  Connect multiple existing ScheduledRelease documents
  """
  connect: [ScheduledReleaseWhereUniqueInput!]

  """
  Create and connect multiple existing ScheduledRelease documents
  """
  create: [ScheduledReleaseCreateInput!]
}

input ScheduledReleaseCreateOneInlineInput {
  """
  Connect one existing ScheduledRelease document
  """
  connect: ScheduledReleaseWhereUniqueInput

  """
  Create and connect one ScheduledRelease document
  """
  create: ScheduledReleaseCreateInput
}

"""
An edge in a connection.
"""
type ScheduledReleaseEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ScheduledRelease!
}

"""
Identifies documents
"""
input ScheduledReleaseManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledReleaseWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledReleaseWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledReleaseWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean
  isImplicit: Boolean

  """
  All values that are not equal to given value.
  """
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """
  All values greater than the given value.
  """
  releaseAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  releaseAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  releaseAt_in: [DateTime]

  """
  All values less than the given value.
  """
  releaseAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  releaseAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  releaseAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledReleaseStatus]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledReleaseStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

enum ScheduledReleaseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  publishedAt_ASC
  publishedAt_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""
System Scheduled Release Status
"""
enum ScheduledReleaseStatus {
  COMPLETED
  FAILED
  IN_PROGRESS
  PENDING
}

input ScheduledReleaseUpdateInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyInlineInput {
  """
  Connect multiple existing ScheduledRelease documents
  """
  connect: [ScheduledReleaseConnectInput!]

  """
  Create and connect multiple ScheduledRelease documents
  """
  create: [ScheduledReleaseCreateInput!]

  """
  Delete multiple ScheduledRelease documents
  """
  delete: [ScheduledReleaseWhereUniqueInput!]

  """
  Disconnect multiple ScheduledRelease documents
  """
  disconnect: [ScheduledReleaseWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]

  """
  Update multiple ScheduledRelease documents
  """
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple ScheduledRelease documents
  """
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
  title: String
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: ScheduledReleaseUpdateManyInput!

  """
  Document search
  """
  where: ScheduledReleaseWhereInput!
}

input ScheduledReleaseUpdateOneInlineInput {
  """
  Connect existing ScheduledRelease document
  """
  connect: ScheduledReleaseWhereUniqueInput

  """
  Create and connect one ScheduledRelease document
  """
  create: ScheduledReleaseCreateInput

  """
  Delete currently connected ScheduledRelease document
  """
  delete: Boolean

  """
  Disconnect currently connected ScheduledRelease document
  """
  disconnect: Boolean

  """
  Update single ScheduledRelease document
  """
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput

  """
  Upsert single ScheduledRelease document
  """
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: ScheduledReleaseUpdateInput!

  """
  Unique document search
  """
  where: ScheduledReleaseWhereUniqueInput!
}

input ScheduledReleaseUpsertInput {
  """
  Create document if it didn't exist
  """
  create: ScheduledReleaseCreateInput!

  """
  Update document if it exists
  """
  update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: ScheduledReleaseUpsertInput!

  """
  Unique document search
  """
  where: ScheduledReleaseWhereUniqueInput!
}

"""
Identifies documents
"""
input ScheduledReleaseWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ScheduledReleaseWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ScheduledReleaseWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [ScheduledReleaseWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  createdBy: UserWhereInput
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  errorMessage: String

  """
  All values containing the given string.
  """
  errorMessage_contains: String

  """
  All values ending with the given string.
  """
  errorMessage_ends_with: String

  """
  All values that are contained in given list.
  """
  errorMessage_in: [String]

  """
  All values that are not equal to given value.
  """
  errorMessage_not: String

  """
  All values not containing the given string.
  """
  errorMessage_not_contains: String

  """
  All values not ending with the given string
  """
  errorMessage_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  errorMessage_not_in: [String]

  """
  All values not starting with the given string.
  """
  errorMessage_not_starts_with: String

  """
  All values starting with the given string.
  """
  errorMessage_starts_with: String
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean
  isImplicit: Boolean

  """
  All values that are not equal to given value.
  """
  isImplicit_not: Boolean
  operations_every: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  publishedBy: UserWhereInput
  releaseAt: DateTime

  """
  All values greater than the given value.
  """
  releaseAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  releaseAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  releaseAt_in: [DateTime]

  """
  All values less than the given value.
  """
  releaseAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  releaseAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  releaseAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  releaseAt_not_in: [DateTime]
  status: ScheduledReleaseStatus

  """
  All values that are contained in given list.
  """
  status_in: [ScheduledReleaseStatus]

  """
  All values that are not equal to given value.
  """
  status_not: ScheduledReleaseStatus

  """
  All values that are not contained in given list.
  """
  status_not_in: [ScheduledReleaseStatus]
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
  updatedBy: UserWhereInput
}

"""
References ScheduledRelease record uniquely
"""
input ScheduledReleaseWhereUniqueInput {
  id: ID
}

type Seo {
  description: String
  hideFromSearch: Boolean

  """
  The unique identifier
  """
  id: ID!
  image(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.

    Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """
  System stage field
  """
  stage: Stage!
  title: String!
}

input SeoConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: SeoWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type SeoConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [SeoEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input SeoCreateInput {
  description: String
  hideFromSearch: Boolean
  image: AssetCreateOneInlineInput
  title: String!
}

input SeoCreateManyInlineInput {
  """
  Create and connect multiple existing Seo documents
  """
  create: [SeoCreateInput!]
}

input SeoCreateOneInlineInput {
  """
  Create and connect one Seo document
  """
  create: SeoCreateInput
}

input SeoCreateWithPositionInput {
  """
  Document to create
  """
  data: SeoCreateInput!

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput
}

"""
An edge in a connection.
"""
type SeoEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Seo!
}

"""
Identifies documents
"""
input SeoManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SeoWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SeoWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SeoWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  hideFromSearch: Boolean

  """
  All values that are not equal to given value.
  """
  hideFromSearch_not: Boolean
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  image: AssetWhereInput
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String
}

enum SeoOrderByInput {
  description_ASC
  description_DESC
  hideFromSearch_ASC
  hideFromSearch_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
}

union SeoParent = Project

input SeoParentConnectInput {
  Project: ProjectConnectInput
}

input SeoParentCreateInput {
  Project: ProjectCreateInput
}

input SeoParentCreateManyInlineInput {
  """
  Connect multiple existing SeoParent documents
  """
  connect: [SeoParentWhereUniqueInput!]

  """
  Create and connect multiple existing SeoParent documents
  """
  create: [SeoParentCreateInput!]
}

input SeoParentCreateOneInlineInput {
  """
  Connect one existing SeoParent document
  """
  connect: SeoParentWhereUniqueInput

  """
  Create and connect one SeoParent document
  """
  create: SeoParentCreateInput
}

input SeoParentUpdateInput {
  Project: ProjectUpdateInput
}

input SeoParentUpdateManyInlineInput {
  """
  Connect multiple existing SeoParent documents
  """
  connect: [SeoParentConnectInput!]

  """
  Create and connect multiple SeoParent documents
  """
  create: [SeoParentCreateInput!]

  """
  Delete multiple SeoParent documents
  """
  delete: [SeoParentWhereUniqueInput!]

  """
  Disconnect multiple SeoParent documents
  """
  disconnect: [SeoParentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing SeoParent documents
  """
  set: [SeoParentWhereUniqueInput!]

  """
  Update multiple SeoParent documents
  """
  update: [SeoParentUpdateWithNestedWhereUniqueInput!]

  """
  Upsert multiple SeoParent documents
  """
  upsert: [SeoParentUpsertWithNestedWhereUniqueInput!]
}

input SeoParentUpdateManyWithNestedWhereInput {
  Project: ProjectUpdateManyWithNestedWhereInput
}

input SeoParentUpdateOneInlineInput {
  """
  Connect existing SeoParent document
  """
  connect: SeoParentWhereUniqueInput

  """
  Create and connect one SeoParent document
  """
  create: SeoParentCreateInput

  """
  Delete currently connected SeoParent document
  """
  delete: Boolean

  """
  Disconnect currently connected SeoParent document
  """
  disconnect: Boolean

  """
  Update single SeoParent document
  """
  update: SeoParentUpdateWithNestedWhereUniqueInput

  """
  Upsert single SeoParent document
  """
  upsert: SeoParentUpsertWithNestedWhereUniqueInput
}

input SeoParentUpdateWithNestedWhereUniqueInput {
  Project: ProjectUpdateWithNestedWhereUniqueInput
}

input SeoParentUpsertWithNestedWhereUniqueInput {
  Project: ProjectUpsertWithNestedWhereUniqueInput
}

input SeoParentWhereInput {
  Project: ProjectWhereInput
}

input SeoParentWhereUniqueInput {
  Project: ProjectWhereUniqueInput
}

input SeoUpdateInput {
  description: String
  hideFromSearch: Boolean
  image: AssetUpdateOneInlineInput
  title: String
}

input SeoUpdateManyInlineInput {
  """
  Create and connect multiple Seo component instances
  """
  create: [SeoCreateWithPositionInput!]

  """
  Delete multiple Seo documents
  """
  delete: [SeoWhereUniqueInput!]

  """
  Update multiple Seo component instances
  """
  update: [SeoUpdateWithNestedWhereUniqueAndPositionInput!]

  """
  Upsert multiple Seo component instances
  """
  upsert: [SeoUpsertWithNestedWhereUniqueAndPositionInput!]
}

input SeoUpdateManyInput {
  description: String
  hideFromSearch: Boolean
  title: String
}

input SeoUpdateManyWithNestedWhereInput {
  """
  Update many input
  """
  data: SeoUpdateManyInput!

  """
  Document search
  """
  where: SeoWhereInput!
}

input SeoUpdateOneInlineInput {
  """
  Create and connect one Seo document
  """
  create: SeoCreateInput

  """
  Delete currently connected Seo document
  """
  delete: Boolean

  """
  Update single Seo document
  """
  update: SeoUpdateWithNestedWhereUniqueInput

  """
  Upsert single Seo document
  """
  upsert: SeoUpsertWithNestedWhereUniqueInput
}

input SeoUpdateWithNestedWhereUniqueAndPositionInput {
  """
  Document to update
  """
  data: SeoUpdateInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """
  Unique component instance search
  """
  where: SeoWhereUniqueInput!
}

input SeoUpdateWithNestedWhereUniqueInput {
  """
  Document to update
  """
  data: SeoUpdateInput!

  """
  Unique document search
  """
  where: SeoWhereUniqueInput!
}

input SeoUpsertInput {
  """
  Create document if it didn't exist
  """
  create: SeoCreateInput!

  """
  Update document if it exists
  """
  update: SeoUpdateInput!
}

input SeoUpsertWithNestedWhereUniqueAndPositionInput {
  """
  Document to upsert
  """
  data: SeoUpsertInput

  """
  Position in the list of existing component instances, will default to appending at the end of list
  """
  position: ConnectPositionInput

  """
  Unique component instance search
  """
  where: SeoWhereUniqueInput!
}

input SeoUpsertWithNestedWhereUniqueInput {
  """
  Upsert data
  """
  data: SeoUpsertInput!

  """
  Unique document search
  """
  where: SeoWhereUniqueInput!
}

"""
Identifies documents
"""
input SeoWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [SeoWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [SeoWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [SeoWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  description: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values that are contained in given list.
  """
  description_in: [String]

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values not ending with the given string
  """
  description_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  description_not_in: [String]

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values starting with the given string.
  """
  description_starts_with: String
  hideFromSearch: Boolean

  """
  All values that are not equal to given value.
  """
  hideFromSearch_not: Boolean
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  image: AssetWhereInput
  title: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values that are contained in given list.
  """
  title_in: [String]

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values not ending with the given string
  """
  title_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  title_not_in: [String]

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values starting with the given string.
  """
  title_starts_with: String
}

"""
References Seo record uniquely
"""
input SeoWhereUniqueInput {
  id: ID
}

"""
Stage system enumeration
"""
enum Stage {
  """
  The Draft is the default stage for all your content.
  """
  DRAFT

  """
  The Published stage is where you can publish your content to.
  """
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  COMBINED
  LOCALIZATION
}

input UnpublishLocaleInput {
  """
  Locales to unpublish
  """
  locale: Locale!

  """
  Stages to unpublish selected locales from
  """
  stages: [Stage!]!
}

"""
User system model
"""
type User implements Node {
  """
  The time the document was created
  """
  createdAt: DateTime!

  """
  Get the document in other stages
  """
  documentInStages(
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [User!]!

  """
  The unique identifier
  """
  id: ID!

  """
  Flag to determine if user is active or not
  """
  isActive: Boolean!

  """
  User Kind. Can be either MEMBER, PAT or PUBLIC
  """
  kind: UserKind!

  """
  The username
  """
  name: String!

  """
  Profile Picture url
  """
  picture: String

  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime

  """
  System stage field
  """
  stage: Stage!

  """
  The time the document was updated
  """
  updatedAt: DateTime!
}

input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """
  Document to connect
  """
  where: UserWhereUniqueInput!
}

"""
A connection to a list of items.
"""
type UserConnection {
  aggregate: Aggregate!

  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

input UserCreateManyInlineInput {
  """
  Connect multiple existing User documents
  """
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """
  Connect one existing User document
  """
  connect: UserWhereUniqueInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User!
}

"""
System User Kind
"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""
Identifies documents
"""
input UserManyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean
  kind: UserKind

  """
  All values that are contained in given list.
  """
  kind_in: [UserKind]

  """
  All values that are not equal to given value.
  """
  kind_not: UserKind

  """
  All values that are not contained in given list.
  """
  kind_not_in: [UserKind]
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  picture: String

  """
  All values containing the given string.
  """
  picture_contains: String

  """
  All values ending with the given string.
  """
  picture_ends_with: String

  """
  All values that are contained in given list.
  """
  picture_in: [String]

  """
  All values that are not equal to given value.
  """
  picture_not: String

  """
  All values not containing the given string.
  """
  picture_not_contains: String

  """
  All values not ending with the given string
  """
  picture_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  picture_not_in: [String]

  """
  All values not starting with the given string.
  """
  picture_not_starts_with: String

  """
  All values starting with the given string.
  """
  picture_starts_with: String
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  publishedAt_ASC
  publishedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateManyInlineInput {
  """
  Connect multiple existing User documents
  """
  connect: [UserConnectInput!]

  """
  Disconnect multiple User documents
  """
  disconnect: [UserWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """
  Connect existing User document
  """
  connect: UserWhereUniqueInput

  """
  Disconnect currently connected User document
  """
  disconnect: Boolean
}

"""
This contains a set of filters that can be used to compare values internally
"""
input UserWhereComparatorInput {
  """
  This field can be used to request to check if the entry is outdated by internal comparison
  """
  outdated_to: Boolean
}

"""
Identifies documents
"""
input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Contains search across all appropriate fields.
  """
  _search: String
  createdAt: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime]
  documentInStages_every: UserWhereStageInput
  documentInStages_none: UserWhereStageInput
  documentInStages_some: UserWhereStageInput
  id: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID]

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values not ending with the given string
  """
  id_not_ends_with: ID

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID]

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID
  isActive: Boolean

  """
  All values that are not equal to given value.
  """
  isActive_not: Boolean
  kind: UserKind

  """
  All values that are contained in given list.
  """
  kind_in: [UserKind]

  """
  All values that are not equal to given value.
  """
  kind_not: UserKind

  """
  All values that are not contained in given list.
  """
  kind_not_in: [UserKind]
  name: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values that are contained in given list.
  """
  name_in: [String]

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values not ending with the given string
  """
  name_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  name_not_in: [String]

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values starting with the given string.
  """
  name_starts_with: String
  picture: String

  """
  All values containing the given string.
  """
  picture_contains: String

  """
  All values ending with the given string.
  """
  picture_ends_with: String

  """
  All values that are contained in given list.
  """
  picture_in: [String]

  """
  All values that are not equal to given value.
  """
  picture_not: String

  """
  All values not containing the given string.
  """
  picture_not_contains: String

  """
  All values not ending with the given string
  """
  picture_not_ends_with: String

  """
  All values that are not contained in given list.
  """
  picture_not_in: [String]

  """
  All values not starting with the given string.
  """
  picture_not_starts_with: String

  """
  All values starting with the given string.
  """
  picture_starts_with: String
  publishedAt: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime]
  updatedAt: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input UserWhereStageInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereStageInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereStageInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereStageInput!]

  """
  This field contains fields which can be set as true or false to specify an internal comparison
  """
  compareWithParent: UserWhereComparatorInput

  """
  Specify the stage to compare with
  """
  stage: Stage
}

"""
References User record uniquely
"""
input UserWhereUniqueInput {
  id: ID
}

type Version {
  createdAt: DateTime!
  id: ID!
  revision: Int!
  stage: Stage!
}

input VersionWhereInput {
  id: ID!
  revision: Int!
  stage: Stage!
}

enum _FilterKind {
  AND
  NOT
  OR
  contains
  contains_all
  contains_none
  contains_some
  ends_with
  eq
  eq_not
  gt
  gte
  in
  lt
  lte
  not_contains
  not_ends_with
  not_in
  not_starts_with
  relational_every
  relational_none
  relational_single
  relational_some
  search
  starts_with
}

enum _MutationInputFieldKind {
  enum
  relation
  richText
  richTextWithEmbeds
  scalar
  union
  virtual
}

enum _MutationKind {
  create
  delete
  deleteMany
  publish
  publishMany
  schedulePublish
  scheduleUnpublish
  unpublish
  unpublishMany
  update
  updateMany
  upsert
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  many
  one
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  combined
  localization
}
